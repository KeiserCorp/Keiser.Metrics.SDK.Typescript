/* tslint:disable */
/* eslint-disable */
/**
 * metrics-sdk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 5.0.22
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { HeightMeasurementData } from './HeightMeasurementData';
import {
    HeightMeasurementDataFromJSON,
    HeightMeasurementDataFromJSONTyped,
    HeightMeasurementDataToJSON,
} from './HeightMeasurementData';
import type { HeightMeasurementListResponseMeta } from './HeightMeasurementListResponseMeta';
import {
    HeightMeasurementListResponseMetaFromJSON,
    HeightMeasurementListResponseMetaFromJSONTyped,
    HeightMeasurementListResponseMetaToJSON,
} from './HeightMeasurementListResponseMeta';

/**
 * 
 * @export
 * @interface HeightMeasurementListResponse
 */
export interface HeightMeasurementListResponse {
    /**
     * 
     * @type {Array<HeightMeasurementData>}
     * @memberof HeightMeasurementListResponse
     */
    heightMeasurements: Array<HeightMeasurementData>;
    /**
     * 
     * @type {HeightMeasurementListResponseMeta}
     * @memberof HeightMeasurementListResponse
     */
    heightMeasurementsMeta: HeightMeasurementListResponseMeta;
    /**
     * 
     * @type {string}
     * @memberof HeightMeasurementListResponse
     */
    accessToken?: string;
    /**
     * 
     * @type {string}
     * @memberof HeightMeasurementListResponse
     */
    refreshToken?: string;
}

/**
 * Check if a given object implements the HeightMeasurementListResponse interface.
 */
export function instanceOfHeightMeasurementListResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "heightMeasurements" in value;
    isInstance = isInstance && "heightMeasurementsMeta" in value;

    return isInstance;
}

export function HeightMeasurementListResponseFromJSON(json: any): HeightMeasurementListResponse {
    return HeightMeasurementListResponseFromJSONTyped(json, false);
}

export function HeightMeasurementListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HeightMeasurementListResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'heightMeasurements': ((json['heightMeasurements'] as Array<any>).map(HeightMeasurementDataFromJSON)),
        'heightMeasurementsMeta': HeightMeasurementListResponseMetaFromJSON(json['heightMeasurementsMeta']),
        'accessToken': !exists(json, 'accessToken') ? undefined : json['accessToken'],
        'refreshToken': !exists(json, 'refreshToken') ? undefined : json['refreshToken'],
    };
}

export function HeightMeasurementListResponseToJSON(value?: HeightMeasurementListResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'heightMeasurements': ((value.heightMeasurements as Array<any>).map(HeightMeasurementDataToJSON)),
        'heightMeasurementsMeta': HeightMeasurementListResponseMetaToJSON(value.heightMeasurementsMeta),
        'accessToken': value.accessToken,
        'refreshToken': value.refreshToken,
    };
}

